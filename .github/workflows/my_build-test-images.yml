name: "MY Build volume test images"
on:
  workflow_dispatch:
    inputs:
      push_to_project:
        description: "Project to build images for"
        required: true
        default: "ghcr.io/alunsin/containerd"
      azure_windows_image_id:
        description: Windows image URN to deploy
        required: true
        default: MicrosoftWindowsServer:WindowsServer:2022-datacenter:20348.350.2111030009
      azure_vm_size:
        description: Windows image builder VM size
        required: true
        default: Standard_D2s_v3
      azure_location:
        description: The Azure region to deploy to
        required: true
        default: westeurope

permissions:
  packages: write

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB_ID }}
  DEFAULT_ADMIN_USERNAME: azureuser
  SSH_OPTS: "-o ServerAliveInterval=20 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
  AZURE_RESOURCE_GROUP: ctrd-test-image-build-${{ github.run_id }}

jobs:
  images:
    name: "Build volume test images"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/github.com/containerd/containerd

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.5'

      - uses: actions/checkout@v2
        with:
          path: src/github.com/containerd/containerd

      - name: Set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
      - name: Install docker
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg > /tmp/docker.gpg
          sudo gpg --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg /tmp/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io jq
          sudo adduser $USER docker
  
      - name: Check docker setup
        shell: bash
        run: |
          docker info
          docker buildx create --name img-builder --use
          docker buildx inspect --bootstrap | cat 
          docker buildx ls | cat
          
  
      - name: Building for ppc64
        shell: bash
        run: |
          
          cd /home/runner/work/containerd/containerd/src/github.com/containerd/containerd/integration/images/volume-copy-up
          docker buildx build --pull --output=type=registry --platform linux/ppc64le --build-arg BASE=busybox .
          
          echo "docker inspect"
          docker buildx inspect
